{"ast":null,"code":"// Este es solo un ejemplo, debes implementar el servicio de autenticación real aquí\nconst AuthService = {\n  login: async (username, password) => {\n    // Simular una llamada a la API para autenticar\n    if (username === 'admin' && password === 'admin') {\n      // Simular una respuesta exitosa\n      return {\n        success: true,\n        user: {\n          username: 'admin'\n        }\n      };\n    } else {\n      // Simular una respuesta de error\n      throw new Error('Credenciales inválidas');\n    }\n  }\n};\nexport default AuthService;","map":{"version":3,"names":["AuthService","login","username","password","success","user","Error"],"sources":["C:/Users/jeanp/Mi unidad/TEC/Semestre VIII/Proyecto/Repositorio/Repo-ConsulTec/consultec/src/services/AuthService.js"],"sourcesContent":["// Este es solo un ejemplo, debes implementar el servicio de autenticación real aquí\r\nconst AuthService = {\r\n    login: async (username, password) => {\r\n        // Simular una llamada a la API para autenticar\r\n        if (username === 'admin' && password === 'admin') {\r\n            // Simular una respuesta exitosa\r\n            return { success: true, user: { username: 'admin' } };\r\n        } else {\r\n            // Simular una respuesta de error\r\n            throw new Error('Credenciales inválidas');\r\n        }\r\n    },\r\n};\r\n\r\nexport default AuthService;\r\n"],"mappings":"AAAA;AACA,MAAMA,WAAW,GAAG;EAChBC,KAAK,EAAE,MAAAA,CAAOC,QAAQ,EAAEC,QAAQ,KAAK;IACjC;IACA,IAAID,QAAQ,KAAK,OAAO,IAAIC,QAAQ,KAAK,OAAO,EAAE;MAC9C;MACA,OAAO;QAAEC,OAAO,EAAE,IAAI;QAAEC,IAAI,EAAE;UAAEH,QAAQ,EAAE;QAAQ;MAAE,CAAC;IACzD,CAAC,MAAM;MACH;MACA,MAAM,IAAII,KAAK,CAAC,wBAAwB,CAAC;IAC7C;EACJ;AACJ,CAAC;AAED,eAAeN,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}